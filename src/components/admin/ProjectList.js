import React, { useEffect, useState } from "react";
import { useDispatch, useSelector } from "react-redux";
import { useNavigate } from "react-router-dom";
import { getAllProjects } from "../../AppRedux/actions/project";
import { AccordionArrow } from "../../utilities/svg";
import {
  AccordionTable,
  NoListToShowContainer,
  PrimaryPill,
  RoundedButton,
  Scaleloader,
  TableBody,
  TableContainer,
} from "../generalComponents";

const ProjectList = () => {
  const dispatch = useDispatch();
  const [projectsData, setProjectsData] = useState(false);
  const [openAccordion, setOpenAccordion] = useState(false);
  const { getAllProjectsBegin, getAllProjectsSuccessData } = useSelector(
    ({ project }) => project
  );

  useEffect(() => {
    dispatch(getAllProjects());
  }, [dispatch]);

  useEffect(() => {
    if (getAllProjectsSuccessData) {
      setProjectsData(getAllProjectsSuccessData.result.projects);
    }
  }, [getAllProjectsSuccessData]);

  return (
    <div>
      <h6 className="text-grey1 font-bold text-3xl border-b border-grey5 pb-4 mb-7">
        Project List
      </h6>

      <TableContainer
        headerClassNames="grid-cols-5"
        headers={[
          {
            name: "Project Name",
          },
          {
            name: "Offical Email",
          },
          {
            name: "Project Manager",
          },
          {
            name: "status",
          },
          {
            name: "category",
          },
        ]}
      >
        {!getAllProjectsBegin ? (
          projectsData?.length > 0 ? (
            projectsData.map((item, index) => (
              <ProjectListItem
                projectData={item}
                key={index}
                setOpenAccordion={setOpenAccordion}
                openAccordion={openAccordion}
                index={index}
              />
            ))
          ) : (
            <NoListToShowContainer text="No Projects!" />
          )
        ) : (
          <Scaleloader />
        )}
      </TableContainer>
    </div>
  );
};

export default ProjectList;

const ProjectListItem = ({
  projectData,
  setOpenAccordion,
  openAccordion,
  index,
}) => {
  const navigate = useNavigate();
  const {
    _id,
    name,
    description,
    officialEmail,
    projectManager,
    status,
    category,
  } = projectData;
  return (
    <>
      <AccordionTable
        index={index}
        id={index}
        openAccordion={openAccordion}
        setOpenAccordion={setOpenAccordion}
        Name={
          <>
            <div className="flex items-center gap-3">
              <p className="text-dark1 font-bold ">{name}</p>
            </div>

            <div className="flexCenter gap-3">
              <RoundedButton
                onClick={(e) => {
                  e.stopPropagation();
                  navigate(`/dashboard/projects/${_id}`);
                }}
              >
                Go to Profile
              </RoundedButton>

              <AccordionArrow
                className={`transition1 ${
                  openAccordion === _id ? "rotate-180" : ""
                }`}
              />
            </div>
          </>
        }
        nameIsComponent={true}
        accordionData={[
          {
            Title: "Name:",
            Value: name,
          },
          {
            Title: "Official Email:",
            Value: officialEmail,
          },
          {
            Title: "Project Manager:",
            Value: projectManager,
          },
          {
            Title: "status:",
            Value: status,
          },
          {
            Title: "category:",
            Value: category,
          },
        ]}
      />

      <TableBody
        classNames="grid-cols-5"
        onClick={() => {
          navigate(`/dashboard/projects/${_id}`);
        }}
        data={[
          {
            Value: name,
          },
          {
            Value: officialEmail,
          },
          {
            Value: projectManager,
          },
          {
            Value: (
              <PrimaryPill name={status} color="#FF0000" hideClick={true} />
            ),
          },
          {
            Value: (
              <PrimaryPill name={category} color="#FF0000" hideClick={true} />
            ),
          },
        ]}
      />
    </>
  );
};
