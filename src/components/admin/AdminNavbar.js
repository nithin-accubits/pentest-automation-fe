import React, { useEffect, useState } from "react";
import { Link, useNavigate } from "react-router-dom";
import { useDispatch, useSelector } from "react-redux";

import { AdminLogout } from "../../AppRedux/actions/Admin";
import { ArrowLeft, LogoutIcon, NotificationIcon } from "../../utilities/svg";
import { getToken } from "../../utilities/crypto";
import {
  ConfirmModal,
  ModalOuter,
  NoListToShowContainer,
  OutsideClickCloseContainer,
} from "../generalComponents";

const AdminNavbar = () => {
  const dispatch = useDispatch();
  const navigate = useNavigate();
  const [showLogoutModal, setShowLogoutModal] = useState(false);

  const { adminLogoutBegin, adminLogoutSuccessData } = useSelector(
    ({ admin }) => admin
  );

  useEffect(() => {
    if (adminLogoutSuccessData) {
      localStorage.removeItem("at");
      localStorage.removeItem("cr");
      localStorage.removeItem("newP");
      localStorage.removeItem("logo");
      localStorage.removeItem("thumbnail");
      localStorage.removeItem("numberOfNewIn");
      localStorage.removeItem("newInData");
      return navigate("/");
    }
  }, [adminLogoutSuccessData, navigate]);

  return (
    <div className="relative z-50">
      <div className="pt-5 md:pt-9 pb-3 xl:pb-7 flexBetween relative">
        <LeftSideHeader />

        <div className="flexCenter gap-3">
          <NotificationDropdown />

          <div
            className={`w-11 h-11 rounded-full bg-grey6 flexCenter primaryHover text-grey1 ${
              showLogoutModal ? "bg-grey5 text-primary" : ""
            }`}
            onClick={() => setShowLogoutModal(!showLogoutModal)}
          >
            <LogoutIcon className="stroke-current" />
          </div>
        </div>

        {showLogoutModal && (
          <ModalOuter
            state={showLogoutModal}
            setState={setShowLogoutModal}
            classNames="hideScrollbar"
          >
            <ConfirmModal
              setState={setShowLogoutModal}
              content={{
                title: "Log out sessions",
                description:
                  "Are you sure you would like to logout this sessions ?",
              }}
              yesClick={() => dispatch(AdminLogout())}
              btnLoader={adminLogoutBegin}
            />
          </ModalOuter>
        )}
      </div>
    </div>
  );
};

export default AdminNavbar;

const LeftSideHeader = () => {
  console.log(getToken());

  return (
    <>
      <div className="flex items-center gap-3 text-dark1 font-bold text-xl md:text-2xl"></div>
    </>
  );
};

export const BackPageButton = ({ link, text, toBackPage }) => {
  return (
    <div className="flexCenter gap-3">
      <Link to={toBackPage ? -1 : link}>
        <ArrowLeft className="primaryHover fill-current" />
      </Link>
      <p>{text}</p>
    </div>
  );
};

const NotificationDropdown = () => {
  const [showNotification, setShowNotification] = useState(false);

  // on notification icon click
  const onBellIconClick = () => {
    setShowNotification(!showNotification);
  };

  return (
    <OutsideClickCloseContainer setState={setShowNotification}>
      <div
        className={`relative w-11 h-11 rounded-full bg-grey6 flexCenter primaryHover text-grey1 ${
          showNotification ? "bg-grey5 text-primary" : ""
        }`}
        onClick={() => onBellIconClick()}
      >
        <NotificationIcon className="stroke-current" />

        <div
          className={`absolute rounded-full top-3 left-6 border-2 border-white block`}
          style={{ backgroundColor: "#FF3F3F", width: "10px", height: "10px" }}
        />
      </div>
      {showNotification && (
        <div
          className="absolute z-20 bottom-0 right-0 translate-y-full bg-white rounded-lg p-7"
          style={{
            boxShadow: "0px 6px 52px rgba(22, 27, 37, 0.12)",
            width: "450px",
          }}
        >
          <h1 className="font-bold text-2xl text-dark1 border-b border-grey5 pb-5 mb-2">
            Notifications
          </h1>

          <div
            style={{
              minWidth: "250px",
              height: "50vh",
              overflow: "auto",
            }}
            id="notificationScrollableDiv"
          >
            <NoListToShowContainer text="Currently No notifications" />
          </div>
        </div>
      )}
    </OutsideClickCloseContainer>
  );
};
