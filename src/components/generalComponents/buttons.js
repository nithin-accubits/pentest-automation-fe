import { scrollToTop } from "./functional";
import { Spinner } from "./Loader";

export const PrimaryButton = ({
  onClick,
  children,
  classNames,
  disabled,
  onSubmit,
}) => (
  <button
    disabled={disabled ? disabled : false}
    className={`bg-primary rounded-5px 500px:rounded-9px px-2 380px:px-5 py-2 font-semibold normalText text-grey6 flexCenter gap-2  ${classNames} ${
      disabled
        ? "cursor-not-allowed"
        : "cursor-pointer hover:shadow-btn active:shadow-btn active:scale-90 transition1"
    }`}
    onClick={() => onClick && onClick()}
    type="submit"
    onSubmit={() => onSubmit && onSubmit()}
  >
    {children}
  </button>
);

export const SecondaryButton = ({
  onClick,
  children,
  classNames,
  disabled,
}) => (
  <button
    className={`${classNames} rounded-5px 500px:rounded-9px px-2 380px:px-5 py-2 font-semibold normalText flexCenter gap-2 ${
      disabled
        ? "cursor-not-allowed opacity-70"
        : "hover:shadow-btn active:shadow-btn active:scale-90 transition1"
    }`}
    onClick={() => onClick && onClick()}
  >
    {children}
  </button>
);

export const RoundedButton = ({ onClick, children, classNames }) => (
  <button
    className={`${classNames} text-primary font-semibold text-base border border-primary rounded-3xl px-4 py-1 primaryHover`}
    onClick={(e) => onClick && onClick(e)}
  >
    {children}
  </button>
);

export const GreyButton = ({ children, onClick, classNames, style }) => (
  <button
    onClick={() => onClick && onClick()}
    className={` ${classNames} bg-light4 rounded-9px px-5 py-2 font-semibold hover:shadow-btn transition1 flexCenter`}
    style={{ ...style }}
  >
    {children}
  </button>
);

export const PageButtons = ({
  onBackClick,
  onContinueClick,
  btnText,
  classNames,
  btnLoader,
  blueBackBtn,
  disableScroll,
  disableContinueBtn,
  btnclassNames,
  style,
}) => {
  return (
    <div
      className={`flexCenter gap-4 sm:w-2/5 mx-auto mt-10 ${classNames}`}
      style={{ ...style }}
    >
      <SecondaryButton
        onClick={() => {
          onBackClick();
          !disableScroll && scrollToTop();
        }}
        classNames={`flex-1 font-medium rounded-7px  ${
          blueBackBtn
            ? "text-primary bg-light4"
            : "bg-white text-dark1 border border-grey2"
        } ${btnclassNames}`}
      >
        {btnText[0]}
      </SecondaryButton>
      <PrimaryButton
        onClick={() => onContinueClick()}
        classNames={`flex-1 border border-primary ${
          disableContinueBtn ? "bg-green-600 border-green-600" : ""
        } ${btnLoader ? "bg-dark1" : ""} ${btnclassNames}`}
        disabled={btnLoader || disableContinueBtn}
      >
        {btnText[1]} {btnLoader && <Spinner />}
      </PrimaryButton>
    </div>
  );
};
