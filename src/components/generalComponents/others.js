import { useState } from "react";
import { useSearchParams } from "react-router-dom";
import { DownArrow, NoListToShow } from "../../utilities/svg";
import { OutsideClickCloseContainer } from "./OutsideClickCloseContainer";

export const IconContainer = ({
  Icon,
  onClick,
  optionValue,
  optionKey,
  classNames,
}) => (
  <div className="text-greyArrow">
    <div
      className={`${classNames} w-7 h-7 rounded-full primaryHover bg-white hover:bg-grey5 border2 flexCenter`}
      style={{
        borderColor: "#E7E8E8",
      }}
      onClick={() => onClick(optionValue, optionKey)}
    >
      <Icon className="stroke-current" />
    </div>
  </div>
);

export const InfoToolTip = ({ children, classNames }) => (
  <div
    className={`absolute top-4 right-0 translate-x-1/2 mt-3 w-52 380px:w-60 text-grey6 font-medium text-xs 380px:text-sm p-2 380px:p-4 z-10 text-center ${classNames}`}
    style={{ backgroundColor: "#24272A" }}
  >
    {children}

    <div
      className="w-4 h-4 rotate-45 absolute right-1/2 top-0 -translate-y-1/2"
      style={{ backgroundColor: "#24272A" }}
    />
  </div>
);

// Component to display No List To Show
export const NoListToShowContainer = ({ text, small }) => (
  <div className={`${small ? "flex-col flexCenter" : ""} rounded-lg mx-auto`}>
    <p
      className={`${
        small ? "mt-1 py-1" : "mt-10 py-6"
      } text-center text-primary font-bold text-base `}
    >
      {text}
    </p>
    <NoListToShow className={`${small ? "w-2/12" : "w-3/12 mx-auto"}`} />
  </div>
);

export const Pill = ({ icon, name, bg, color, classNames }) => (
  <div
    className={`rounded-full flexCenter gap-2 min-w-66px min-h-25px 500px:min-w-100px 500px:min-h-34px px-2 ${classNames}`}
    style={{
      background: bg ? bg : "#F2F2F2",
      color: color,
    }}
  >
    {icon && <img src={icon} alt="" className="w-3 h-3 500px:w-4 500px:h-4" />}
    <p className="normalText2 font-medium">{name}</p>
  </div>
);

export const OutlinePill = ({ name, color }) => (
  <div
    className="uppercase flexCenter gap-1 px-3 py-1 text-dark1 font-medium text-xs rounded-13px"
    style={{ border: "0.54px solid #ADB5BD" }}
  >
    <div
      className="rounded-full "
      style={{
        minHeight: "6px",
        minWidth: "6px",
        backgroundColor: color,
      }}
    />
    {name}
  </div>
);

export const TopInfoCard = ({
  data: { name, lineTwo, value },
  fontSize = "30px",
  classNames,
}) => {
  return (
    <div
      className={`rounded-14px bg-white p-6 flex-1 ${classNames}`}
      style={{
        boxShadow: "0px 14px 30px rgba(194, 194, 194, 0.14)",
      }}
    >
      <p className="text-grey2 text-base font-normal uppercase mb-3">
        {name} <br /> {lineTwo}
      </p>
      <p
        className="text-dark1 font-bold text-3xl"
        style={{ fontSize: fontSize }}
      >
        {value}
      </p>
    </div>
  );
};

export const PrimaryPill = ({
  name,
  color,
  hideClick,
  items,
  onChangeStatus,
}) => {
  const [showDropdown, setShowDropdown] = useState(false);

  return (
    <div className="relative">
      <OutsideClickCloseContainer setState={setShowDropdown}>
        <div
          onClick={(e) => {
            if (!hideClick) {
              e.stopPropagation();
              setShowDropdown(!showDropdown);
            }
          }}
          className="border border-grey5 text-grey4 px-3 rounded-13px w-fit bg-white flexCenter gap-2 min-h-25px"
        >
          <div
            className="rounded-full"
            style={{
              minWidth: "6px",
              minHeight: "6px",
              backgroundColor: color,
            }}
          />
          <span className="text-dark1 font-medium text-xs uppercase">
            {name}
          </span>

          {!hideClick && <DownArrow className="fill-current ml-2" />}
        </div>

        {showDropdown && items && (
          <ChangeStatusDropdown
            items={items}
            onClick={(id) => {
              setShowDropdown(false);
              onChangeStatus(id);
            }}
          />
        )}
      </OutsideClickCloseContainer>
    </div>
  );
};

export const ChangeStatusDropdown = ({ items, onClick }) => {
  return (
    <div
      className="absolute top-10 w-full min-w-fit animate-visible2"
      style={{ maxWidth: "250px" }}
    >
      <div className="relative z-10 shadow-dropdown bg-white p-2 rounded-7px flex flex-col gap-1 sm:gap-2">
        {items.map(({ id, name, color }, index) => (
          <div
            key={index}
            onClick={(e) => {
              e.stopPropagation();
              onClick(id);
            }}
            className="px-3 py-2 flex items-center gap-3 transition2 cursor-pointer rounded-5px text-grey1 normalText font-medium hover:bg-grey5 hover:font-semibold"
          >
            <div
              className="rounded-full"
              style={{
                minWidth: "6px",
                minHeight: "6px",
                backgroundColor: color,
              }}
            />
            <p>{name}</p>
          </div>
        ))}
      </div>
    </div>
  );
};

export const PageTabsContainer = ({ tabs, onClick, tab }) => {
  let [params] = useSearchParams();
  const tabFromParams = tab ? tab : params.get("tab");

  return (
    <div
      className="bg-grey6 rounded-9px font-bold text-sm 500px:text-base flex items-center justify-around"
      style={{ padding: "6px" }}
    >
      {tabs.map(({ name, args, param }, index) => (
        <div
          key={index}
          className={`rounded-9px text-grey2 px-2 500px:px-6 xl:px-9 py-2 primaryHover transition2 ${
            name === tabFromParams ? "bg-white text-black" : ""
          }`}
          style={{
            boxShadow:
              name === tabFromParams ? "0px 2px 13px rgba(9, 9, 9, 0.05)" : "",
          }}
          onClick={() => onClick(name, args, param)}
        >
          {name}
        </div>
      ))}
    </div>
  );
};

export const ListItem = ({ name, value, onClick, hover, hideItem }) => {
  return (
    <div className="flexBetween gap-4">
      {!hideItem && (
        <>
          <p className="text-grey1 font-normal text-sm">{name}</p>
          <p
            className={`text-dark1 font-bold text-sm ${
              hover ? "primaryHover" : ""
            }`}
            onClick={() => onClick && onClick()}
          >
            {value}
          </p>
        </>
      )}
    </div>
  );
};
