import { LeftArrow } from "../../utilities/svg";
import { scrollToTop } from "./functional";

// PaginationButtons
export const PaginationButtons = ({
  count = 0,
  currentPage,
  setcurrentPage,
  loading,
  limit = 10,
  onPageNumberClick,
}) => {
  const getTotalNumberOfPages = () => {
    const totalPages = parseInt(count / limit),
      leftColumns = count - totalPages * limit;
    return leftColumns > 0 ? totalPages + 1 : totalPages;
  };

  const handleNumberClick = (number) => {
    setcurrentPage && setcurrentPage(number);
    scrollToTop();
    onPageNumberClick(number);
  };

  return (
    <div className="my-14">
      {count !== 0 && getTotalNumberOfPages() > 1 && (
        <div className=" flexCenter gap-2 mx-auto " style={{ minWidth: "33%" }}>
          <ArrowContainer
            onClick={() => {
              if (currentPage !== 1 && !loading) {
                handleNumberClick(currentPage - 1);
              }
            }}
            classNames={
              currentPage === 1
                ? "cursor-not-allowed"
                : "hover:bg-grey5 primaryHover"
            }
          >
            <LeftArrow className="stroke-current" />
          </ArrowContainer>
          {Array(getTotalNumberOfPages())
            .fill()
            .map((_, index) => (
              <p
                key={index}
                className={`font-normal text-sm text-grey2 rounded-md flexCenter hover:bg-grey5 primaryHover ${
                  currentPage === index + 1 ? "bg-dark1 text-white" : ""
                }`}
                onClick={() => handleNumberClick(index + 1)}
                style={{
                  minWidth: "28px",
                  minHeight: "28px",
                }}
              >
                {index + 1}
              </p>
            ))}
          <ArrowContainer
            onClick={() =>
              currentPage !== getTotalNumberOfPages() &&
              getTotalNumberOfPages() !== 0 &&
              !loading &&
              handleNumberClick(currentPage + 1)
            }
            classNames={
              currentPage === getTotalNumberOfPages() ||
              getTotalNumberOfPages() === 0
                ? "cursor-not-allowed"
                : "hover:bg-grey5 primaryHover"
            }
          >
            <LeftArrow className="transform rotate-180 stroke-current" />
          </ArrowContainer>
        </div>
      )}
    </div>
  );
};

const ArrowContainer = ({ children, onClick, classNames }) => (
  <div
    className={`bg-white flexCenter rounded-md ${classNames}`}
    onClick={() => onClick()}
    style={{
      boxShadow: "0px 0px 0px 1px rgba(0, 0, 0, 0.07)",
      minWidth: "28px",
      minHeight: "28px",
    }}
  >
    {children}
  </div>
);
