import {
  ADMIN_LOGIN_BEGIN,
  ADMIN_LOGIN_SUCCESS,
  ADMIN_LOGIN_FAILURE,
  RESET_ADMIN_LOGIN,
  RESET_PASSWORD_LINK_SEND_BEGIN,
  RESET_PASSWORD_LINK_SEND_SUCCESS,
  RESET_PASSWORD_LINK_SEND_FAILURE,
  RESET_RESET_PASSWORD_LINK_SEND,
  RESET_ADMIN_PASSWORD_BEGIN,
  RESET_ADMIN_PASSWORD_SUCCESS,
  RESET_ADMIN_PASSWORD_FAILURE,
  RESET_RESET_ADMIN_PASSWORD,
  ADMIN_LOGOUT_BEGIN,
  ADMIN_LOGOUT_SUCCESS,
  ADMIN_LOGOUT_FAILURE,
  RESET_ADMIN_LOGOUT,
  ADMIN_TOKEN_VERIFY_BEGIN,
  ADMIN_TOKEN_VERIFY_SUCCESS,
  ADMIN_TOKEN_VERIFY_FAILURE,
  RESET_ADMIN_TOKEN_VERIFY,
  GET_NOTIFICATION_BEGIN,
  GET_NOTIFICATION_SUCCESS,
  GET_NOTIFICATION_FAILURE,
  RESET_GET_NOTIFICATION,
  READ_NOTIFICATION_BEGIN,
  READ_NOTIFICATION_SUCCESS,
  READ_NOTIFICATION_FAILURE,
  RESET_READ_NOTIFICATION,
  GET_LOCK_PERIOD_BEGIN,
  GET_LOCK_PERIOD_SUCCESS,
  GET_LOCK_PERIOD_FAILURE,
  RESET_GET_LOCK_PERIOD,
  UPDATE_LOCK_PERIOD_BEGIN,
  UPDATE_LOCK_PERIOD_SUCCESS,
  UPDATE_LOCK_PERIOD_FAILURE,
  RESET_UPDATE_LOCK_PERIOD,
  CLOSE_PROJECT_BEGIN,
  CLOSE_PROJECT_SUCCESS,
  CLOSE_PROJECT_FAILURE,
  RESET_CLOSE_PROJECT,
} from "../constants/Admin";

const initialState = {
  adminLoginBegin: false,
  adminLoginSuccessData: null,
  adminLoginFailureData: null,

  resetPasswordSendLinkBegin: false,
  resetPasswordSendLinkSuccessData: null,
  resetPasswordSendLinkFailureData: null,

  resetAdminPasswordBegin: false,
  resetAdminPasswordSuccessData: null,
  resetAdminPasswordFailureData: null,

  adminLogoutBegin: false,
  adminLogoutSuccessData: null,
  adminLogoutFailureData: null,

  adminTokenVerifyBegin: false,
  adminTokenVerifySuccessData: null,
  adminTokenVerifyFailureData: null,

  getNotificationBegin: false,
  getNotificationSuccessData: null,
  getNotificationFailureData: null,

  readNotificationBegin: false,
  readNotificationSuccessData: null,
  readNotificationFailureData: null,

  getLockPeriodDataBegin: false,
  getLockPeriodDataSuccessData: null,
  getLockPeriodDataFailureData: null,

  updateLockPeriodDataBegin: false,
  updateLockPeriodDataSuccessData: null,
  updateLockPeriodDataFailureData: null,

  closeProjectBegin: false,
  closeProjectSuccessData: null,
  closeProjectFailureData: null,
};

export const admin = (state = initialState, action) => {
  const data = action.data;

  switch (action.type) {
    case ADMIN_LOGIN_BEGIN:
      return {
        ...state,
        adminLoginBegin: true,
        adminLoginSuccessData: null,
        adminLoginFailureData: null,
      };
    case ADMIN_LOGIN_SUCCESS:
      return {
        ...state,
        adminLoginBegin: false,
        adminLoginSuccessData: data,
        adminLoginFailureData: null,
      };
    case ADMIN_LOGIN_FAILURE:
      return {
        ...state,
        adminLoginBegin: false,
        adminLoginSuccessData: null,
        adminLoginFailureData: data,
      };
    case RESET_ADMIN_LOGIN:
      return {
        ...state,
        adminLoginBegin: false,
        adminLoginSuccessData: null,
        adminLoginFailureData: null,
      };

    case RESET_PASSWORD_LINK_SEND_BEGIN:
      return {
        ...state,
        resetPasswordSendLinkBegin: true,
        resetPasswordSendLinkSuccessData: null,
        resetPasswordSendLinkFailureData: null,
      };
    case RESET_PASSWORD_LINK_SEND_SUCCESS:
      return {
        ...state,
        resetPasswordSendLinkBegin: false,
        resetPasswordSendLinkSuccessData: data,
        resetPasswordSendLinkFailureData: null,
      };
    case RESET_PASSWORD_LINK_SEND_FAILURE:
      return {
        ...state,
        resetPasswordSendLinkBegin: false,
        resetPasswordSendLinkSuccessData: null,
        resetPasswordSendLinkFailureData: data,
      };
    case RESET_RESET_PASSWORD_LINK_SEND:
      return {
        ...state,
        resetPasswordSendLinkBegin: false,
        resetPasswordSendLinkSuccessData: null,
        resetPasswordSendLinkFailureData: null,
      };

    case RESET_ADMIN_PASSWORD_BEGIN:
      return {
        ...state,
        resetAdminPasswordBegin: true,
        resetAdminPasswordSuccessData: null,
        resetAdminPasswordFailureData: null,
      };
    case RESET_ADMIN_PASSWORD_SUCCESS:
      return {
        ...state,
        resetAdminPasswordBegin: false,
        resetAdminPasswordSuccessData: data,
        resetAdminPasswordFailureData: null,
      };
    case RESET_ADMIN_PASSWORD_FAILURE:
      return {
        ...state,
        resetAdminPasswordBegin: false,
        resetAdminPasswordSuccessData: null,
        resetAdminPasswordFailureData: data,
      };
    case RESET_RESET_ADMIN_PASSWORD:
      return {
        ...state,
        resetAdminPasswordBegin: false,
        resetAdminPasswordSuccessData: null,
        resetAdminPasswordFailureData: null,
      };

    case ADMIN_LOGOUT_BEGIN:
      return {
        ...state,
        adminLogoutBegin: true,
        adminLogoutSuccessData: null,
        adminLogoutFailureData: null,
      };
    case ADMIN_LOGOUT_SUCCESS:
      return {
        ...state,
        adminLogoutBegin: false,
        adminLogoutSuccessData: data,
        adminLogoutFailureData: null,
      };
    case ADMIN_LOGOUT_FAILURE:
      return {
        ...state,
        adminLogoutBegin: false,
        adminLogoutSuccessData: null,
        adminLogoutFailureData: data,
      };
    case RESET_ADMIN_LOGOUT:
      return {
        ...state,
        adminLogoutBegin: false,
        adminLogoutSuccessData: null,
        adminLogoutFailureData: null,
      };

    case ADMIN_TOKEN_VERIFY_BEGIN:
      return {
        ...state,
        adminTokenVerifyBegin: true,
        adminTokenVerifySuccessData: null,
        adminTokenVerifyFailureData: null,
      };
    case ADMIN_TOKEN_VERIFY_SUCCESS:
      return {
        ...state,
        adminTokenVerifyBegin: false,
        adminTokenVerifySuccessData: data,
        adminTokenVerifyFailureData: null,
      };
    case ADMIN_TOKEN_VERIFY_FAILURE:
      return {
        ...state,
        adminTokenVerifyBegin: false,
        adminTokenVerifySuccessData: null,
        adminTokenVerifyFailureData: data,
      };
    case RESET_ADMIN_TOKEN_VERIFY:
      return {
        ...state,
        adminTokenVerifyBegin: false,
        adminTokenVerifySuccessData: null,
        adminTokenVerifyFailureData: null,
      };

    case GET_NOTIFICATION_BEGIN:
      return {
        ...state,
        getNotificationBegin: true,
        getNotificationSuccessData: null,
        getNotificationFailureData: null,
      };
    case GET_NOTIFICATION_SUCCESS:
      return {
        ...state,
        getNotificationBegin: false,
        getNotificationSuccessData: data,
        getNotificationFailureData: null,
      };
    case GET_NOTIFICATION_FAILURE:
      return {
        ...state,
        getNotificationBegin: false,
        getNotificationSuccessData: null,
        getNotificationFailureData: data,
      };
    case RESET_GET_NOTIFICATION:
      return {
        ...state,
        getNotificationBegin: false,
        getNotificationSuccessData: null,
        getNotificationFailureData: null,
      };

    case READ_NOTIFICATION_BEGIN:
      return {
        ...state,
        readNotificationBegin: true,
        readNotificationSuccessData: null,
        readNotificationFailureData: null,
      };
    case READ_NOTIFICATION_SUCCESS:
      return {
        ...state,
        readNotificationBegin: false,
        readNotificationSuccessData: data,
        readNotificationFailureData: null,
      };
    case READ_NOTIFICATION_FAILURE:
      return {
        ...state,
        readNotificationBegin: false,
        readNotificationSuccessData: null,
        readNotificationFailureData: data,
      };
    case RESET_READ_NOTIFICATION:
      return {
        ...state,
        readNotificationBegin: false,
        readNotificationSuccessData: null,
        readNotificationFailureData: null,
      };

    case GET_LOCK_PERIOD_BEGIN:
      return {
        ...state,
        getLockPeriodDataBegin: true,
        getLockPeriodDataSuccessData: null,
        getLockPeriodDataFailureData: null,
      };
    case GET_LOCK_PERIOD_SUCCESS:
      return {
        ...state,
        getLockPeriodDataBegin: false,
        getLockPeriodDataSuccessData: data,
        getLockPeriodDataFailureData: null,
      };
    case GET_LOCK_PERIOD_FAILURE:
      return {
        ...state,
        getLockPeriodDataBegin: false,
        getLockPeriodDataSuccessData: null,
        getLockPeriodDataFailureData: data,
      };
    case RESET_GET_LOCK_PERIOD:
      return {
        ...state,
        getLockPeriodDataBegin: false,
        getLockPeriodDataSuccessData: null,
        getLockPeriodDataFailureData: null,
      };

    case UPDATE_LOCK_PERIOD_BEGIN:
      return {
        ...state,
        updateLockPeriodDataBegin: true,
        updateLockPeriodDataSuccessData: null,
        updateLockPeriodDataFailureData: null,
      };
    case UPDATE_LOCK_PERIOD_SUCCESS:
      return {
        ...state,
        updateLockPeriodDataBegin: false,
        updateLockPeriodDataSuccessData: data,
        updateLockPeriodDataFailureData: null,
      };
    case UPDATE_LOCK_PERIOD_FAILURE:
      return {
        ...state,
        updateLockPeriodDataBegin: false,
        updateLockPeriodDataSuccessData: null,
        updateLockPeriodDataFailureData: data,
      };
    case RESET_UPDATE_LOCK_PERIOD:
      return {
        ...state,
        updateLockPeriodDataBegin: false,
        updateLockPeriodDataSuccessData: null,
        updateLockPeriodDataFailureData: null,
      };

    case CLOSE_PROJECT_BEGIN:
      return {
        ...state,
        closeProjectBegin: true,
        closeProjectSuccessData: null,
        closeProjectFailureData: null,
      };
    case CLOSE_PROJECT_SUCCESS:
      return {
        ...state,
        closeProjectBegin: false,
        closeProjectSuccessData: data,
        closeProjectFailureData: null,
      };
    case CLOSE_PROJECT_FAILURE:
      return {
        ...state,
        closeProjectBegin: false,
        closeProjectSuccessData: null,
        closeProjectFailureData: data,
      };
    case RESET_CLOSE_PROJECT:
      return {
        ...state,
        closeProjectBegin: false,
        closeProjectSuccessData: null,
        closeProjectFailureData: null,
      };

    default:
      return state;
  }
};
