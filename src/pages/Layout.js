import React from "react";
import { Navigate, Route, Routes, useLocation } from "react-router-dom";
import { ToastContainer } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";

import Footer from "../components/Footer";
import Navbar from "../components/Navbar";
import About from "./About";
import AdminLogin from "./AdminLogin";
import Home from "./Home";
import AdminForgotPassword from "./AdminForgotPassword";
import NotFound from "./NotFound";
import AdminResetPassword from "./AdminResetPassword";
import ProjectManagement from "./AdminDashboard/ProjectManagement";
import AdminProjectDetailsPage from "./AdminDashboard/AdminProjectDetailsPage";
import Dashboard from "./AdminDashboard/Dashboard";
import { getToken } from "../utilities/crypto";
import ReportGenerator from "./AdminDashboard/ReportGenerator";
import CreateProject from "./AdminDashboard/CreateProject";
import Calendar from "./AdminDashboard/Calendar";
import Users from "./AdminDashboard/Users";
import Settings from "./AdminDashboard/Settings";
import RiskRating from "./AdminDashboard/RiskRating";

const Layout = () => {
  const { pathname } = useLocation();
  const IsAdminPage = pathname.includes("dashboard");

  return (
    <div className="relative">
      <ToastContainer
        limit={1}
        position="top-center"
        autoClose={5000}
        hideProgressBar={false}
        newestOnTop={false}
        closeOnClick
        rtl={false}
        pauseOnFocusLoss
        draggable
        pauseOnHover
      />

      {!IsAdminPage && <Navbar />}
      <Routes>
        <Route path="/" element={<Home />} />
        <Route path="/about" element={<About />} />
        <Route path="*" element={<NotFound />} />
        {/* Admin */}
        <Route path="/login" element={<AdminLogin />} />
        <Route path="/forgot_password" element={<AdminForgotPassword />} />
        <Route path="/password-reset" element={<AdminResetPassword />} />

        <Route
          path="dashboard/db"
          element={
            <RequireAuth>
              <Dashboard />
            </RequireAuth>
          }
        />
        <Route
          path="dashboard/r-generator"
          element={
            <RequireAuth>
              <ReportGenerator />
            </RequireAuth>
          }
        />
        <Route
          path="dashboard/create-project"
          element={
            <RequireAuth>
              <CreateProject />
            </RequireAuth>
          }
        />

        <Route
          path="/dashboard/projects"
          element={
            <RequireAuth>
              <ProjectManagement />
            </RequireAuth>
          }
        />

        <Route
          path="/dashboard/projects/:projectID"
          element={
            <RequireAuth>
              <AdminProjectDetailsPage />
            </RequireAuth>
          }
        />

        <Route
          path="/dashboard/calendar"
          element={
            <RequireAuth>
              <Calendar />
            </RequireAuth>
          }
        />
        <Route
          path="/dashboard/users"
          element={
            <RequireAuth>
              <Users />
            </RequireAuth>
          }
        />
        <Route
          path="/dashboard/settings"
          element={
            <RequireAuth>
              <Settings />
            </RequireAuth>
          }
        />
        <Route
          path="/dashboard/risk-rating"
          element={
            <RequireAuth>
              <RiskRating />
            </RequireAuth>
          }
        />
      </Routes>

      {!IsAdminPage && <Footer />}
    </div>
  );
};

function RequireAuth({ children }) {
  return getToken() ? children : <Navigate to="/login" />;
}

export default Layout;
