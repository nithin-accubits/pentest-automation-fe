var CryptoJS = require("crypto-js");

export const storeToken = (tokenData) => {
  // Encrypt
  var ciphertext = CryptoJS.AES.encrypt(
    JSON.stringify(tokenData),
    "secret key zipmex"
  ).toString();
  localStorage.setItem("at", ciphertext);
};

export const getToken = () => {
  const ciphertext = localStorage.getItem("at"); // token
  if (!ciphertext) {
    return false;
  } else {
    var bytes = CryptoJS.AES.decrypt(ciphertext, "secret key zipmex");
    var decryptedData = JSON.parse(bytes.toString(CryptoJS.enc.Utf8));
    if (decryptedData) {
      return decryptedData;
    } else {
      return false;
    }
  }
};

export const storeCommonResources = (data) => {
  const decryptedData = getLSItem("cr");

  // Encrypt
  var storeData = CryptoJS.AES.encrypt(
    JSON.stringify({ ...decryptedData, ...data }),
    "secret key zipmex"
  ).toString();
  localStorage.setItem("cr", storeData);
};

export const getLSItem = (name) => {
  const ciphertext = localStorage.getItem(name);
  if (!ciphertext) {
    return false;
  } else {
    var bytes = CryptoJS.AES.decrypt(ciphertext, "secret key zipmex");
    var decryptedData = JSON.parse(bytes.toString(CryptoJS.enc.Utf8));
    if (decryptedData) {
      return decryptedData;
    } else {
      return false;
    }
  }
};

export const storeItemInLS = (name, data, decryptedData) => {
  // Encrypt
  var ciphertext = CryptoJS.AES.encrypt(
    JSON.stringify({ ...decryptedData, ...data }),
    "secret key zipmex"
  ).toString();
  localStorage.setItem(name, ciphertext);
};

export const storeTextInLS = (name, data) => {
  // Encrypt
  var ciphertext = CryptoJS.AES.encrypt(data, "secret key zipmex").toString();
  localStorage.setItem(name, ciphertext);
};

export const getTextFromLS = (name) => {
  const ciphertext = localStorage.getItem(name);
  if (!ciphertext) {
    return false;
  } else {
    var bytes = CryptoJS.AES.decrypt(ciphertext, "secret key zipmex");
    var originalText = bytes.toString(CryptoJS.enc.Utf8);
    if (originalText) {
      return originalText;
    } else {
      return false;
    }
  }
};
